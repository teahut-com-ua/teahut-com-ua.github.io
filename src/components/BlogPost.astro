---
import { formatDate } from "../utils/utils";
import Button from "./Button.astro";

const { url, image, imageAlt, categoryTitle, categoryUrl, title, subtitle, description, author, pubDate } = Astro.props;
const time = formatDate(pubDate);
---

<article class="blog-post">
    <a class="main-block" href={url} data-astro-prefetch>
        <img src={image} alt={imageAlt}>
        <h3 class="title">{title}</h3>
        <h5 class="subtitle">{subtitle}</h5>
        <p class="description">{description}</p>
    </a>
    <section class="footer-information">
        <a href={categoryUrl}>
            <Button 
                class="btn-block"
                background="var(--button)" 
                color="light-dark(var(--foreground), var(--foreground-dark))"
                isBordered={true}
            >{categoryTitle}</Button>
        </a>
        <footer class="footer-block">
            <p>{author}</p>
            <p class="time">{time}</p>
        </footer>
    </section>
</article>

<style>
    article {
        grid-row: span 2;
           grid-template-areas:
      "main"
      "footer-information";
        display: grid;
        grid-template-rows: subgrid;
        row-gap: 1rem;
        align-content: space-between;
        margin: 0 0.5rem;
        border: 1px solid light-dark(var(--background-cards), var(--button));
        border-radius: .7rem; 
        background-color: light-dark(var(--background), var(--footer));
    }
    
    .main-block {
        padding: 1.5rem 2rem 0;
        grid-row: span 2;
        grid-area: main;
        display: grid;
        grid-template-areas:
        "title"
        "subtitle"
        "description";
        grid-template-rows: auto auto 1fr;
    }

    .title {
        color: light-dark(var(--green), var(--active));
        grid-area: title;
        text-align: center;
        margin-bottom: 1rem;
    }

    .subtitle {
        color: light-dark(var(--green), var(--active));
        grid-area: subtitle;
        text-align: center;
        font-size: 1rem;
    }

    .description {
        grid-area: description;
    }

    a {
        color: light-dark(var(--foreground), var(--foreground-dark));
    }

    .footer-information {
        background-color: light-dark(var(--background-cards), rgb(37, 37, 37));
        border-radius: 0 0 .7rem .7rem;
        padding: 1.5rem 2rem 1rem;
        grid-area: footer-information;
        display: grid;
        grid-template-columns: 1fr;
        grid-template-rows: auto auto;
        gap: 1rem;
        grid-template-areas:
        "button"
        "footer";
    }

    .btn-block {
        grid-area: button;
    }

    p {
        margin: unset;
    }

    .footer-block {
        font-size: 0.9rem;
        grid-area: footer;
        display: grid;
        grid-template-columns: 1fr auto;
        grid-template-rows: subgrid;
        justify-content: space-between;
    }
    
    @media (min-width: 48rem) {
        article.blog-post {
            transition: all var(--animation-timing) ease-in-out;
        }
        
        article:hover {
            transform: scale(1.05);
            box-shadow:
            2.8px 2.8px 17.4px rgba(0, 0, 0, 0.035),
            6.7px 6.7px 28px rgba(0, 0, 0, 0.045),
            12.5px 12.5px 34.9px rgba(0, 0, 0, 0.051),
            22.3px 22.3px 40.7px rgba(0, 0, 0, 0.055),
            41.8px 41.8px 49.3px rgba(0, 0, 0, 0.06),
            100px 100px 80px rgba(0, 0, 0, 0.07);
		}
        
        .btn-block {
            font-size: 0.9rem;
        }
        
        .footer-block {
            padding-inline: .5rem;
        }
    }
</style>