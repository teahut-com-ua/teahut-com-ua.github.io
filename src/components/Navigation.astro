---
import { Icon } from 'astro-icon/components';
import { Image } from "astro:assets";
import logo from '../../public/logo.png';
---

<div class="navigation" aria-label="Primary">
  <a class="header-logo" href="/" aria-label="To Home" data-astro-prefetch>
      <Image class="logo" src={logo} alt="Logo" />
  </a>
  <a class="home-link" href="/" aria-label="To Home" data-astro-prefetch>Майстерня Ча Дао</a>
  <nav class="desktop-menu">
    <a class="link1 link" href="/" aria-label="To Home" data-astro-prefetch>Майстерня</a>
    <div>
      <a class="link2 link" href="/teas/" aria-label="To Teas" data-astro-prefetch>Ча</a>
      <a class="link3 link" href="/library/" aria-label="To Articles" data-astro-prefetch>Дао</a>
    </div>
  </nav>
    <!-- <form class="theme-picker link4" action="">
      <fieldset>
          <legend class="visually-hidden">Кольорова тема:</legend>
          <label class="icon-label" for="light-dark">
            <Icon name="computer" size={24} />
            <input 
                class="visually-hidden"
                name="color-scheme" 
                type="radio" 
                value="light dark"
                id="light-dark"
            >
        </label>
          <label class="icon-label" for="light">
              <Icon name="sun-filled" size={24} />
              <input 
                  class="visually-hidden"
                  name="color-scheme" 
                  type="radio" 
                  value="light"
                  id="light"
              >
          </label>
          <label class="icon-label" for="dark">
              <Icon name="moon-filled" size={24} />
              <input 
                  class="visually-hidden"
                  name="color-scheme" 
                  type="radio" 
                  value="dark"
                  id="dark"
                  >
          </label>
      </fieldset>
  </form> -->
  <a class="search-logo link4" href="/search/" aria-label="To Search" data-astro-prefetch>
    <Icon name="search" size={32} />
  </a>
</div>

<style>
  .navigation {
    margin: 0 1rem;
    background-color: light-dark(var(--background), var(--footer));
    border-radius: 9999px;
    box-shadow:
      2.8px 2.8px 17.4px rgba(0, 0, 0, 0.035),
      6.7px 6.7px 28px rgba(0, 0, 0, 0.045),
      12.5px 12.5px 34.9px rgba(0, 0, 0, 0.051),
      22.3px 22.3px 40.7px rgba(0, 0, 0, 0.055),
      41.8px 41.8px 49.3px rgba(0, 0, 0, 0.06),
      100px 100px 80px rgba(0, 0, 0, 0.07);
    display: grid;
    grid-template-columns: 3.5rem 1fr 3.5rem;
    grid-auto-rows: 3.5rem;
    grid-template-areas: 
      "logo home-link search";
    align-items: center;
    justify-items: center;
    transition: all var(--animation-timing) ease-in-out;
  }

  .header-logo {
    display: flex;
    width: 3.5rem;
    height: 3.5rem;
    border-radius: 100%;
    border-width: 0;
    background-color: light-dark(var(--background), var(--foreground-dark));
    border-color: light-dark(var(--background), var(--foreground-dark));
    cursor: pointer;
    grid-area: logo;
    margin: 0;
    aspect-ratio: 1 / 1;
  }

  
  .logo{
    border-left: 2px solid light-dark(var(--foreground), var(--background)); 
    border-top: 2px solid light-dark(var(--foreground), var(--background));
    border-bottom: 2px solid light-dark(var(--foreground), var(--background));
    border-radius: 100%;
  }
  
  .home-link {
    font-size: 1.4rem;
    font-weight: 600;
    grid-area: home-link;
    color: light-dark(var(--foreground), var(--background));
    opacity: 0.8;
  }
  
  .desktop-menu,
  form.theme-picker { display: none; }
  
  .link {
    color: var(--background);
  }
  
  .search-logo {
    height: 3.5rem;
    width: 3.5rem;
    display: flex;
    justify-content: center;
    align-items: center;
    color: light-dark(var(--foreground), var(--foreground-dark));
    border-right: 2px solid light-dark(var(--foreground), var(--background)); 
    border-top: 2px solid light-dark(var(--foreground), var(--background));
    border-bottom: 2px solid light-dark(var(--foreground), var(--background));
    border-radius: 100%;
  }
  



  form.theme-picker-mobile {
    display: block;
    width: fit-content;
    margin: 0 auto;
  }

  .visually-hidden {
    clip: rect(0 0 0 0);
    clip-path: inset(50%);
    height: 1px;
    overflow: hidden;
    position: absolute;
    white-space: nowrap;
    width: 1px;
  }

  .theme-picker > fieldset {
    border: 0;
    display: flex;
    border-radius: 999px;
    background-color: light-dark(var(--background), var(--foreground-dark));
    color: light-dark(var(--foreground), var(--footer));
  }
        
  .icon-label {
    display: flex;
    padding: 0.7rem;
    text-align: center;
  }

  @media screen and (min-width: 630px) {
    .home-link, .close-btn {
      display: none;
    }

    .navigation {
      margin: 0 1rem 1rem;
      grid-template-columns: 3.5rem auto 1fr auto auto;
      grid-template-areas:
        "logo . desktop-menu . link4";
    }

    .desktop-menu {
      display: flex;
      gap: 3rem;
      grid-area: desktop-menu;
      font-size: 1.8rem;
      font-weight: 600;
    }

    form.theme-picker {
      display: block;
      width: fit-content;
      margin: 0 auto;
    }

    a.link {
      color: light-dark(var(--foreground), var(--background));
      padding: 0 0.5rem;
      opacity: 0.8;
    }

    .link4 {
      grid-area: link4;
    }

    .link:hover {
      background-color: light-dark(var(--foreground), var(--footer));
      border-radius: 0.5rem;
      border: solid 1px var(--active);
      color: light-dark(var(--background), var(--active));
      opacity: 1;
    }
        
    .header-logo:hover {
      color: light-dark(var(--foreground), var(--active));
      border: solid 3px var(--active);
      border-radius: 100%;
    }

    label:has(input[name="color-scheme"][type="radio"]:checked) {
      color: var(--active);
      border: 1px solid var(--active);
      border-radius: 100%;
    }
  }
</style>

<!-- <script is:inline>
  const colorThemes = document.querySelectorAll('[name="color-scheme"]')

  const storeTheme = function(theme) {
    sessionStorage.setItem("theme", theme);
  }

  colorThemes.forEach((themeOption) => {
    themeOption.addEventListener("click", () => {
      storeTheme(themeOption.id);
    })
  });

  const retrieveTheme = function() {
    const activeTheme = sessionStorage.getItem("theme");
    colorThemes.forEach((themeOption) => {
      if (themeOption.id === activeTheme) {
        themeOption.checked = true;
      }
    })
  }

  document.onload = retrieveTheme();
</script> -->