---
import type { GetStaticPaths } from "astro";
import { getCollection } from "astro:content";
import ArticleLayout from "../../../layouts/ArticleLayout.astro";
import BlogPost from "../../../components/BlogPost4.astro";

export const getStaticPaths = (async ({ paginate }) => {
    const allPosts = (await getCollection("brewingtips"))
        .filter((post) => post.data.posted !== false)
        .sort((a, b) => new Date(b.data.pubDate).valueOf() - new Date(a.data.pubDate).valueOf()
    );
    return paginate(allPosts, { pageSize: 10 });
}) satisfies GetStaticPaths;

const { page } = Astro.props;

const title = `Деякі поради щодо заварювання`;
const pageNumber = `${page.currentPage}`
---

<ArticleLayout title={title}>
  <h1 class="double-last-line">{title}</h1>
  <div class="pagination-block">
    {page.url.prev && <a href={page.url.prev} class="prev-page-pagin">&#8592;</a>}
    <p class="page-number">сторінка {pageNumber}</p>
    {page.url.next && <a href={page.url.next} class="next-page-pagin">&#8594;</a>}
  </div>

  <section class="posts-preview">
    {
      page.data.map((p) => (
        <BlogPost
                class="post"
                url={`/library/brewingtips/${p.id}`}
                title={p.data.title}
                subtitle={p.data.subtitle}
                description={p.data.description}
                pubDate={p.data.pubDate}
                postedDate={p.data.postedDate}
                categoryTitle={p.data.category.title}
                categoryUrl={p.data.category.url}
                featured={p.data.featured}
        />
      ))
    }
  </section>
  <div class="pagination-block">
    {page.url.prev && <a href={page.url.prev} class="prev-page-pagin">&#8592;</a>}
    <p class="page-number">сторінка {pageNumber}</p>
    {page.url.next && <a href={page.url.next} class="next-page-pagin">&#8594;</a>}
  </div>
</ArticleLayout>

<style>
    h1, h4 {
      text-align: center;
    }

    .posts-preview {
      display: grid;
      grid-auto-flow: dense;
      grid-template-columns: repeat(auto-fit, minmax(min(100%, 300px), 1fr));
      grid-template-rows: repeat(4, auto);
      row-gap: 2rem;
		  margin-bottom: 2rem;
      container-type: inline-size;
    }

    .pagination-block {
      display: grid; 
      grid-template-columns: 1fr auto 1fr;
		  grid-template-areas: "prev page next";
      justify-content: center; 
      gap: 3rem;
      margin-bottom: 1.5rem;
    }

    .prev-page-pagin {
      grid-area: prev;
      width: fit-content;
      justify-self: end;
    }

    .next-page-pagin {
      grid-area: next;
      width: fit-content;
      justify-self: start;
    }

    .page-number {
      color: light-dark(var(--green), var(--active));
      text-align: center;
      grid-area: page;
      margin-bottom: unset;
    }
    
    .pagination-block > a {
      padding: 0.2rem 0.5rem 0.1rem;
      border: 1px solid light-dark(var(--foreground), var(--foreground-dark));
      border-radius: 0.5rem;
      font-size: 0.9rem;
      color: light-dark(var(--foreground), var(--foreground-dark));
    }
    
    @media(min-width: 48rem) {
      section.posts-preview {
        column-gap: 2rem;
      }
      
      .pagination-block {
        margin-bottom: 2rem;
      }

      .pagination-block > a:hover {
        color: var(--active);
        border: 1px solid var(--active);
      }
    }
</style>