---
import type { GetStaticPaths } from "astro";
import { getCollection } from "astro:content";
import ArticleLayout from "../../../layouts/ArticleLayout.astro";
import BlogPost from "../../../components/BlogPost.astro";

export const getStaticPaths = (async ({ paginate }) => {
    const allPosts = (await getCollection("gongfuteapot"))
        .filter((post) => post.data.posted !== false)
        .sort((a, b) => new Date(b.data.pubDate).valueOf() - new Date(a.data.pubDate).valueOf()
    );
    return paginate(allPosts, { pageSize: 10 });
}) satisfies GetStaticPaths;

const { page } = Astro.props;

const title = `Чайник Ґонфу`;
const pageNumber = `сторінка ${page.currentPage}`
---

<ArticleLayout title={title}>
  <h1 class="last-line">{title}</h1>
  <h4 class="last-line">{pageNumber}</h4>

  <section class="posts-preview">
    {
      page.data.map((p) => (
        <BlogPost
                class="post"
                url={`/library/gongfuteapot/${p.id}`}
                title={p.data.title}
                subtitle={p.data.subtitle}
                author={p.data.author}
                description={p.data.description}
                pubDate={p.data.pubDate}
                categoryTitle={p.data.category.title}
                categoryUrl={p.data.category.url}
        />
      ))
    }
  </section>
  <div class="pagination-block">
    {page.url.prev && <a href={page.url.prev}>Попередня</a>}
    {pageNumber}
    {page.url.next && <a href={page.url.next}>Наступна</a>}
  </div>
</ArticleLayout>

<style>
    h1, h4 {
      text-align: center;
    }

    .posts-preview {
      display: grid;
      grid-auto-flow: dense;
      grid-template-columns: repeat(auto-fit, minmax(min(100%, 300px), 1fr));
      grid-template-rows: 1fr auto;
      gap: 2em;
		  margin-bottom: 2rem;
      container-type: inline-size;
    }

    .pagination-block {
        display: flex; 
        justify-content: center; 
        gap: 3rem; 
        margin-bottom: 1.5rem;
    }
    
    .pagination-block > a {
        padding: 0.2rem 0.5rem 0.1rem;
        border: 1px solid light-dark(var(--foreground), var(--foreground-dark));
        border-radius: 0.5rem;
        font-size: 0.9rem;
        color: light-dark(var(--foreground), var(--foreground-dark));
    }
    
    @media(min-width: 48rem) {
        section.posts-preview {
            gap: 2rem;
        }
        
        .pagination-block {
            margin-bottom: 2rem;
        }

        .pagination-block > a:hover {
            color: var(--active);
            border: 1px solid var(--active);
        }
    }
</style>